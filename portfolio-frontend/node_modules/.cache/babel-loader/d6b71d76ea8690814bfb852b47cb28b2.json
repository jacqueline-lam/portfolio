{"ast":null,"code":"var _jsxFileName = \"/Users/jackie.lam/Projects/portfolio/portfolio-frontend/src/containers/ProjectsContainer.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Route } from 'react-router-dom';\nimport ProjectFilters from '../components/projects/ProjectFilters';\nimport ProjectList from '../components/projects/ProjectList';\nimport ProjectDetails from '../components/projects/ProjectDetails';\nimport { fetchStacks } from \"../actions/fetchStacks\";\nimport { fetchProjects } from \"../actions/fetchProjects\";\nimport { addFilter, removeFilter } from '../actions/filterProjects'; // import { filterProjects } from \"../actions/filterProjects\";\n\nclass ProjectsContainer extends Component {\n  componentDidMount() {\n    this.props.fetchStacks();\n    this.props.fetchProjects();\n  }\n\n  render() {\n    const {\n      filteredProjects,\n      stacks,\n      selectedStackIds,\n      loading,\n      addFilter,\n      removeFilter,\n      match\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"projects\",\n      className: \"component\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 7\n      }\n    }, console.log(match), loading ? /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }\n    }, \"Loading...\") : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Route, {\n      path: \"/projects/:projectId\",\n      render: routerProps => /*#__PURE__*/React.createElement(ProjectDetails, Object.assign({}, routerProps, {\n        projects: filteredProjects,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 73\n        }\n      })),\n      onUpdate: () => window.scrollTo(0, 0),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/projects\",\n      onUpdate: () => window.scrollTo(0, 0),\n      render: () => /*#__PURE__*/React.createElement(\"div\", {\n        id: \"portfolio\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 19\n        }\n      }, \"PORTFOLIO\"), /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 19\n        }\n      }, \"My Latest Projects\"), /*#__PURE__*/React.createElement(ProjectFilters, {\n        stacks: stacks,\n        selectedStackIds: selectedStackIds,\n        addFilter: addFilter,\n        removeFilter: removeFilter,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 19\n        }\n      }), /*#__PURE__*/React.createElement(ProjectList, {\n        filteredProjects: filteredProjects,\n        match: match,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 19\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 15\n      }\n    })));\n  }\n\n} // passing in the state from the Redux store\n// so we can access values in our stores as props\n\n\nconst mapStateToProps = state => {\n  return {\n    stacks: state.projects.stacks,\n    selectedStackIds: state.projects.selectedStackIds,\n    filteredProjects: state.projects.filteredProjects,\n    loading: state.projects.loading\n  };\n}; // gives us ability to dispatch new actions to our store directly from this component\n\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchStacks: () => dispatch(fetchStacks()),\n    fetchProjects: () => dispatch(fetchProjects()),\n    addFilter: stackId => dispatch(addFilter(stackId)),\n    removeFilter: stackId => dispatch(removeFilter(stackId))\n  };\n}; // connect redux store to this component\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProjectsContainer);","map":{"version":3,"sources":["/Users/jackie.lam/Projects/portfolio/portfolio-frontend/src/containers/ProjectsContainer.js"],"names":["React","Component","connect","Route","ProjectFilters","ProjectList","ProjectDetails","fetchStacks","fetchProjects","addFilter","removeFilter","ProjectsContainer","componentDidMount","props","render","filteredProjects","stacks","selectedStackIds","loading","match","console","log","routerProps","window","scrollTo","mapStateToProps","state","projects","mapDispatchToProps","dispatch","stackId"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux';\nimport { Route } from 'react-router-dom';\n\nimport ProjectFilters from '../components/projects/ProjectFilters'\nimport ProjectList from '../components/projects/ProjectList'\nimport ProjectDetails from '../components/projects/ProjectDetails'\nimport { fetchStacks } from \"../actions/fetchStacks\";\nimport { fetchProjects } from \"../actions/fetchProjects\";\nimport { addFilter, removeFilter } from '../actions/filterProjects';\n// import { filterProjects } from \"../actions/filterProjects\";\n\nclass ProjectsContainer extends Component {\n  componentDidMount() {\n    this.props.fetchStacks()\n    this.props.fetchProjects()\n  }\n\n  render() {\n    const { filteredProjects, stacks, selectedStackIds, loading, addFilter, removeFilter, match } = this.props\n    return (\n      <div id='projects' className='component'>\n        {console.log(match)}\n        {\n          loading ?\n            <h2>Loading...</h2>\n            :\n            < >\n              <Route path='/projects/:projectId' render={routerProps => <ProjectDetails {...routerProps} projects={filteredProjects} />} onUpdate={() => window.scrollTo(0, 0)} />\n              <Route exact path='/projects' onUpdate={() => window.scrollTo(0, 0)} render={() =>\n                <div id='portfolio'>\n                  <h1>PORTFOLIO</h1>\n                  <h3>My Latest Projects</h3>\n                  <ProjectFilters stacks={stacks} selectedStackIds={selectedStackIds} addFilter={addFilter} removeFilter={removeFilter} />\n                  <ProjectList filteredProjects={filteredProjects} match={match} />\n                </div>\n              } />\n              {/* add `match` to the arguments so we can access the path information in `routerProps` that is passed from App.js */}\n              {/* replace `component` prop with the `render` prop so we can pass the route information to the `ProjectDetails` component*/}\n            </ >\n        }\n      </div >\n    )\n  }\n}\n\n// passing in the state from the Redux store\n// so we can access values in our stores as props\nconst mapStateToProps = state => {\n  return {\n    stacks: state.projects.stacks,\n    selectedStackIds: state.projects.selectedStackIds,\n    filteredProjects: state.projects.filteredProjects,\n    loading: state.projects.loading\n  }\n}\n\n// gives us ability to dispatch new actions to our store directly from this component\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchStacks: () => dispatch(fetchStacks()),\n    fetchProjects: () => dispatch(fetchProjects()),\n    addFilter: stackId => dispatch(addFilter(stackId)),\n    removeFilter: stackId => dispatch(removeFilter(stackId))\n  }\n}\n\n// connect redux store to this component\nexport default connect(mapStateToProps, mapDispatchToProps)(ProjectsContainer)"]},"metadata":{},"sourceType":"module"}