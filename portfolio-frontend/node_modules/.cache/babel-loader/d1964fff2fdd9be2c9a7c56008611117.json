{"ast":null,"code":"var _jsxFileName = \"/Users/jackie.lam/Projects/portfolio/portfolio-frontend/src/components/projects/FilterButton.js\";\nimport React, { Component } from 'react';\n\nclass FilterButton extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      selected: false\n    };\n\n    this.handleOnClick = event => {\n      console.log(event.target);\n      let pressed = event.target.getAttribute(\"aria-pressed\") === \"true\";\n      const stackClicked = event.target.value;\n\n      if (!pressed) {\n        this.props.addFilter(event.target.id); // this.setState(prevState => ({\n        //   stacks: [...prevState.stacks, stackClicked]\n        // }));\n\n        this.setState({\n          selected: true\n        });\n        event.target.setAttribute(\"aria-pressed\", \"true\");\n        event.target.classList.add('active');\n      } else {\n        //   // this.setState(prevState => ({\n        //   //   stacks: prevState.stacks.filter(stack => stack !== stackClicked),\n        //   // }));\n        this.props.removeFilter(event.target.id);\n        this.setState({\n          selected: false\n        });\n        event.target.setAttribute(\"aria-pressed\", \"false\");\n        event.target.classList.remove('active');\n      } // this.props.filterProjects(this.state.stack);\n\n    };\n  }\n\n  render() {\n    return (\n      /*#__PURE__*/\n      // <label className=\"btn btn-outline-secondary\" >\n      //   <input type=\"checkbox\" autocomplete=\"off\" value={stack} aria-pressed=\"false\" onClick={this.handleOnClick} /> {stack}\n      // </label>\n      React.createElement(\"button\", {\n        id: this.props.stack.id,\n        type: \"button\",\n        className: \"btn btn-outline-primary btn-sm\",\n        \"aria-pressed\": \"false\",\n        value: this.props.stack,\n        onClick: this.handleOnClick,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 7\n        }\n      }, this.props.stack.name)\n    );\n  }\n\n}\n\nexport default FilterButton;","map":{"version":3,"sources":["/Users/jackie.lam/Projects/portfolio/portfolio-frontend/src/components/projects/FilterButton.js"],"names":["React","Component","FilterButton","state","selected","handleOnClick","event","console","log","target","pressed","getAttribute","stackClicked","value","props","addFilter","id","setState","setAttribute","classList","add","removeFilter","remove","render","stack","name"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,MAAMC,YAAN,SAA2BD,SAA3B,CAAqC;AAAA;AAAA;AAAA,SACnCE,KADmC,GAC3B;AACNC,MAAAA,QAAQ,EAAE;AADJ,KAD2B;;AAAA,SAKnCC,aALmC,GAKnBC,KAAK,IAAI;AACvBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,MAAlB;AACA,UAAIC,OAAO,GAAIJ,KAAK,CAACG,MAAN,CAAaE,YAAb,CAA0B,cAA1B,MAA8C,MAA7D;AACA,YAAMC,YAAY,GAAGN,KAAK,CAACG,MAAN,CAAaI,KAAlC;;AAEA,UAAI,CAACH,OAAL,EAAc;AACZ,aAAKI,KAAL,CAAWC,SAAX,CAAqBT,KAAK,CAACG,MAAN,CAAaO,EAAlC,EADY,CAGZ;AACA;AACA;;AACA,aAAKC,QAAL,CAAc;AACZb,UAAAA,QAAQ,EAAE;AADE,SAAd;AAGAE,QAAAA,KAAK,CAACG,MAAN,CAAaS,YAAb,CAA0B,cAA1B,EAA0C,MAA1C;AACAZ,QAAAA,KAAK,CAACG,MAAN,CAAaU,SAAb,CAAuBC,GAAvB,CAA2B,QAA3B;AACD,OAXD,MAWO;AACL;AACA;AACA;AACA,aAAKN,KAAL,CAAWO,YAAX,CAAwBf,KAAK,CAACG,MAAN,CAAaO,EAArC;AAEA,aAAKC,QAAL,CAAc;AACZb,UAAAA,QAAQ,EAAE;AADE,SAAd;AAGAE,QAAAA,KAAK,CAACG,MAAN,CAAaS,YAAb,CAA0B,cAA1B,EAA0C,OAA1C;AACAZ,QAAAA,KAAK,CAACG,MAAN,CAAaU,SAAb,CAAuBG,MAAvB,CAA8B,QAA9B;AACD,OA3BsB,CA4BvB;;AACD,KAlCkC;AAAA;;AAoCnCC,EAAAA,MAAM,GAAG;AACP;AAAA;AACE;AACA;AACA;AACA;AACE,QAAA,EAAE,EAAE,KAAKT,KAAL,CAAWU,KAAX,CAAiBR,EADvB;AAEE,QAAA,IAAI,EAAC,QAFP;AAGE,QAAA,SAAS,EAAC,gCAHZ;AAIE,wBAAa,OAJf;AAKE,QAAA,KAAK,EAAE,KAAKF,KAAL,CAAWU,KALpB;AAME,QAAA,OAAO,EAAE,KAAKnB,aANhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAOG,KAAKS,KAAL,CAAWU,KAAX,CAAiBC,IAPpB;AAJF;AAcD;;AAnDkC;;AAsDrC,eAAevB,YAAf","sourcesContent":["import React, { Component } from 'react';\n\nclass FilterButton extends Component {\n  state = {\n    selected: false\n  }\n\n  handleOnClick = event => {\n    console.log(event.target)\n    let pressed = (event.target.getAttribute(\"aria-pressed\") === \"true\");\n    const stackClicked = event.target.value\n\n    if (!pressed) {\n      this.props.addFilter(event.target.id)\n\n      // this.setState(prevState => ({\n      //   stacks: [...prevState.stacks, stackClicked]\n      // }));\n      this.setState({\n        selected: true\n      });\n      event.target.setAttribute(\"aria-pressed\", \"true\")\n      event.target.classList.add('active')\n    } else {\n      //   // this.setState(prevState => ({\n      //   //   stacks: prevState.stacks.filter(stack => stack !== stackClicked),\n      //   // }));\n      this.props.removeFilter(event.target.id)\n\n      this.setState({\n        selected: false\n      })\n      event.target.setAttribute(\"aria-pressed\", \"false\")\n      event.target.classList.remove('active')\n    }\n    // this.props.filterProjects(this.state.stack);\n  }\n\n  render() {\n    return (\n      // <label className=\"btn btn-outline-secondary\" >\n      //   <input type=\"checkbox\" autocomplete=\"off\" value={stack} aria-pressed=\"false\" onClick={this.handleOnClick} /> {stack}\n      // </label>\n      <button\n        id={this.props.stack.id}\n        type=\"button\"\n        className=\"btn btn-outline-primary btn-sm\"\n        aria-pressed='false'\n        value={this.props.stack}\n        onClick={this.handleOnClick} >\n        {this.props.stack.name}\n      </button >\n    );\n  }\n}\n\nexport default FilterButton;\n"]},"metadata":{},"sourceType":"module"}