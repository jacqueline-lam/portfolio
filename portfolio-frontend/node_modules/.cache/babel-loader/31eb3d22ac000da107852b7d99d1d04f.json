{"ast":null,"code":"var _jsxFileName = \"/Users/jackie.lam/Projects/portfolio/portfolio-frontend/src/containers/ProjectsContainer.js\";\nimport React, { Component } from 'react';\nimport ProjectFilters from '../components/projects/ProjectFilters';\nimport ProjectList from '../components/projects/ProjectList';\nimport { connect } from 'react-redux';\nimport { fetchStacks } from \"../actions/fetchStacks\";\nimport { fetchProjects } from \"../actions/fetchProjects\"; // import { filterProjects } from \"../actions/filterProjects\";\n\nclass ProjectsContainer extends Component {\n  componentDidMount() {\n    console.log(this.props);\n    this.props.fetchStacks();\n    this.props.fetchProjects();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 7\n      }\n    }, this.props.loading ? /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }\n    }, \"Loading...\") : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ProjectFilters, {\n      filterProjects: this.props.filterProjects,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(ProjectList, {\n      projects: this.props.projects,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 15\n      }\n    })));\n  }\n\n} //passing in the state from the Redux store\n// so we can acccess values in our stores as props\n\n\nconst mapStateToProps = state => {\n  return {\n    projects: state.projects,\n    stacks: state.stacks,\n    loading: state.loading\n  };\n}; // gives us ability to dispatch new actions to our store directly from this component\n\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchProjects: () => dispatch(fetchProjects()),\n    filterProjects: stack => dispatch({\n      type: \"FILTER_PROJECTS\",\n      stack\n    })\n  };\n}; // connect redux store to this component\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProjectsContainer);","map":{"version":3,"sources":["/Users/jackie.lam/Projects/portfolio/portfolio-frontend/src/containers/ProjectsContainer.js"],"names":["React","Component","ProjectFilters","ProjectList","connect","fetchStacks","fetchProjects","ProjectsContainer","componentDidMount","console","log","props","render","loading","filterProjects","projects","mapStateToProps","state","stacks","mapDispatchToProps","dispatch","stack","type"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,cAAP,MAA2B,uCAA3B;AACA,OAAOC,WAAP,MAAwB,oCAAxB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,QAA4B,wBAA5B;AACA,SAASC,aAAT,QAA8B,0BAA9B,C,CACA;;AAEA,MAAMC,iBAAN,SAAgCN,SAAhC,CAA0C;AACxCO,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAjB;AACA,SAAKA,KAAL,CAAWN,WAAX;AACA,SAAKM,KAAL,CAAWL,aAAX;AACD;;AAEDM,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI,KAAKD,KAAL,CAAWE,OAAX,gBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,gBAGE,uDACE,oBAAC,cAAD;AAAgB,MAAA,cAAc,EAAE,KAAKF,KAAL,CAAWG,cAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE,oBAAC,WAAD;AAAa,MAAA,QAAQ,EAAE,KAAKH,KAAL,CAAWI,QAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CALN,CADF;AAaD;;AArBuC,C,CAwB1C;AACA;;;AACA,MAAMC,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAO;AACLF,IAAAA,QAAQ,EAAEE,KAAK,CAACF,QADX;AAELG,IAAAA,MAAM,EAAED,KAAK,CAACC,MAFT;AAGLL,IAAAA,OAAO,EAAEI,KAAK,CAACJ;AAHV,GAAP;AAKD,CAND,C,CAQA;;;AACA,MAAMM,kBAAkB,GAAGC,QAAQ,IAAI;AACrC,SAAO;AACLd,IAAAA,aAAa,EAAE,MAAMc,QAAQ,CAACd,aAAa,EAAd,CADxB;AAELQ,IAAAA,cAAc,EAAEO,KAAK,IAAID,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAE,iBAAR;AAA2BD,MAAAA;AAA3B,KAAD;AAF5B,GAAP;AAID,CALD,C,CAOA;;;AACA,eAAejB,OAAO,CAACY,eAAD,EAAkBG,kBAAlB,CAAP,CAA6CZ,iBAA7C,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport ProjectFilters from '../components/projects/ProjectFilters'\nimport ProjectList from '../components/projects/ProjectList'\nimport { connect } from 'react-redux';\nimport { fetchStacks } from \"../actions/fetchStacks\";\nimport { fetchProjects } from \"../actions/fetchProjects\";\n// import { filterProjects } from \"../actions/filterProjects\";\n\nclass ProjectsContainer extends Component {\n  componentDidMount() {\n    console.log(this.props)\n    this.props.fetchStacks()\n    this.props.fetchProjects()\n  }\n\n  render() {\n    return (\n      <div>\n        {\n          this.props.loading ?\n            <h2>Loading...</h2>\n            :\n            < >\n              <ProjectFilters filterProjects={this.props.filterProjects} />\n              <ProjectList projects={this.props.projects} />\n            </ >\n        }\n      </div>\n    )\n  }\n}\n\n//passing in the state from the Redux store\n// so we can acccess values in our stores as props\nconst mapStateToProps = state => {\n  return {\n    projects: state.projects,\n    stacks: state.stacks,\n    loading: state.loading\n  }\n}\n\n// gives us ability to dispatch new actions to our store directly from this component\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchProjects: () => dispatch(fetchProjects()),\n    filterProjects: stack => dispatch({ type: \"FILTER_PROJECTS\", stack })\n  }\n}\n\n// connect redux store to this component\nexport default connect(mapStateToProps, mapDispatchToProps)(ProjectsContainer)"]},"metadata":{},"sourceType":"module"}