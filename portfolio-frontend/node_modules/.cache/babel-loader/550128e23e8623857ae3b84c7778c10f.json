{"ast":null,"code":"var _jsxFileName = \"/Users/jackie.lam/Projects/portfolio/portfolio-frontend/src/containers/BlogPostsContainer.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchBlogPosts } from '../actions/fetchBlogPosts';\nimport Blog from '../components/blog/Blog';\nimport Loading from '../images/loading.gif'; // Container component deal with managing blog state and class methods\n\nclass BlogPostsContainer extends Component {\n  // blog data requested after React has mounted its component\n  // once data is ready, React will re-render and use the API content\n  componentDidMount() {\n    this.props.fetchBlogPosts();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"blog-container\",\n      className: \"component\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 7\n      }\n    }, this.props.loadingBlog ? /*#__PURE__*/React.createElement(\"img\", {\n      src: Loading,\n      alt: \"loading\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 13\n      }\n    }) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Blog, {\n      blogPosts: this.props.blogPosts,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 15\n      }\n    })));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    blogPosts: state.blog.blogPosts,\n    loadingBlog: state.blog.loadingBlog\n  };\n}; // pass in objec containing k-v pairs for action creator `fetchBlogPosts`\n\n\nexport default connect(mapStateToProps, {\n  fetchBlogPosts\n})(BlogPostsContainer);","map":{"version":3,"sources":["/Users/jackie.lam/Projects/portfolio/portfolio-frontend/src/containers/BlogPostsContainer.js"],"names":["React","Component","connect","fetchBlogPosts","Blog","Loading","BlogPostsContainer","componentDidMount","props","render","loadingBlog","blogPosts","mapStateToProps","state","blog"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,cAAT,QAA+B,2BAA/B;AACA,OAAOC,IAAP,MAAiB,yBAAjB;AACA,OAAOC,OAAP,MAAoB,uBAApB,C,CAEA;;AACA,MAAMC,kBAAN,SAAiCL,SAAjC,CAA2C;AACzC;AACA;AACAM,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,KAAL,CAAWL,cAAX;AACD;;AAEDM,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,EAAE,EAAC,gBAAR;AAAyB,MAAA,SAAS,EAAC,WAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI,KAAKD,KAAL,CAAWE,WAAX,gBACE;AAAK,MAAA,GAAG,EAAEL,OAAV;AAAmB,MAAA,GAAG,EAAC,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,gBAGE,uDACE,oBAAC,IAAD;AAAM,MAAA,SAAS,EAAE,KAAKG,KAAL,CAAWG,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CALN,CADF;AAYD;;AApBwC;;AAuB3C,MAAMC,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAO;AACLF,IAAAA,SAAS,EAAEE,KAAK,CAACC,IAAN,CAAWH,SADjB;AAELD,IAAAA,WAAW,EAAEG,KAAK,CAACC,IAAN,CAAWJ;AAFnB,GAAP;AAID,CALD,C,CAOA;;;AACA,eAAeR,OAAO,CAACU,eAAD,EAAkB;AAAET,EAAAA;AAAF,CAAlB,CAAP,CAA6CG,kBAA7C,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux';\nimport { fetchBlogPosts } from '../actions/fetchBlogPosts';\nimport Blog from '../components/blog/Blog'\nimport Loading from '../images/loading.gif'\n\n// Container component deal with managing blog state and class methods\nclass BlogPostsContainer extends Component {\n  // blog data requested after React has mounted its component\n  // once data is ready, React will re-render and use the API content\n  componentDidMount() {\n    this.props.fetchBlogPosts()\n  }\n\n  render() {\n    return (\n      <div id='blog-container' className='component'>\n        {\n          this.props.loadingBlog ?\n            <img src={Loading} alt='loading' />\n            :\n            < >\n              <Blog blogPosts={this.props.blogPosts} />\n            </>\n        }\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    blogPosts: state.blog.blogPosts,\n    loadingBlog: state.blog.loadingBlog\n  }\n}\n\n// pass in objec containing k-v pairs for action creator `fetchBlogPosts`\nexport default connect(mapStateToProps, { fetchBlogPosts })(BlogPostsContainer)"]},"metadata":{},"sourceType":"module"}