{"ast":null,"code":"var _jsxFileName = \"/Users/jackie.lam/Projects/portfolio/portfolio-frontend/src/containers/ProjectsContainer.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport ProjectFilters from '../components/projects/ProjectFilters';\nimport ProjectList from '../components/projects/ProjectList';\nimport { fetchStacks } from \"../actions/fetchStacks\";\nimport { addFilter, removeFilter } from '../../actions/filterProjects'; // import { filterProjects } from \"../actions/filterProjects\";\n\nclass ProjectsContainer extends Component {\n  componentDidMount() {\n    console.log(this.props);\n    this.props.fetchStacks();\n    this.props.fetchProjects();\n  }\n\n  render() {\n    const {\n      projects,\n      stacks,\n      loading,\n      addFilter,\n      removeFilter\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 7\n      }\n    }, this.props.loading ? /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }\n    }, \"Loading...\") : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ProjectFilters, {\n      stacks: this.props.stacks,\n      addFilter: this.props.filterProjects,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(ProjectList, {\n      projects: this.props.projects,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 15\n      }\n    })));\n  }\n\n} //passing in the state from the Redux store\n// so we can acccess values in our stores as props\n\n\nconst mapStateToProps = state => {\n  return {\n    projects: state.projects,\n    stacks: state.stacks,\n    loading: state.loading\n  };\n}; // gives us ability to dispatch new actions to our store directly from this component\n\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchStacks: () => dispatch(fetchStacks()),\n    fetchProjects: () => dispatch(fetchProjects()),\n    addFilter: stackId => dispatch(addFilter(stackId)),\n    removeFilter: stackId => dispatch(removeFilter(stackId))\n  };\n}; // connect redux store to this component\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProjectsContainer);","map":{"version":3,"sources":["/Users/jackie.lam/Projects/portfolio/portfolio-frontend/src/containers/ProjectsContainer.js"],"names":["React","Component","connect","ProjectFilters","ProjectList","fetchStacks","addFilter","removeFilter","ProjectsContainer","componentDidMount","console","log","props","fetchProjects","render","projects","stacks","loading","filterProjects","mapStateToProps","state","mapDispatchToProps","dispatch","stackId"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,cAAP,MAA2B,uCAA3B;AACA,OAAOC,WAAP,MAAwB,oCAAxB;AACA,SAASC,WAAT,QAA4B,wBAA5B;AACA,SAASC,SAAT,EAAoBC,YAApB,QAAwC,8BAAxC,C,CACA;;AAEA,MAAMC,iBAAN,SAAgCP,SAAhC,CAA0C;AACxCQ,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAjB;AACA,SAAKA,KAAL,CAAWP,WAAX;AACA,SAAKO,KAAL,CAAWC,aAAX;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,QAAF;AAAYC,MAAAA,MAAZ;AAAoBC,MAAAA,OAApB;AAA6BX,MAAAA,SAA7B;AAAwCC,MAAAA;AAAxC,QAAyD,KAAKK,KAApE;AACA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI,KAAKA,KAAL,CAAWK,OAAX,gBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,gBAGE,uDACE,oBAAC,cAAD;AAAgB,MAAA,MAAM,EAAE,KAAKL,KAAL,CAAWI,MAAnC;AAA2C,MAAA,SAAS,EAAE,KAAKJ,KAAL,CAAWM,cAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE,oBAAC,WAAD;AAAa,MAAA,QAAQ,EAAE,KAAKN,KAAL,CAAWG,QAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CALN,CADF;AAaD;;AAtBuC,C,CAyB1C;AACA;;;AACA,MAAMI,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAO;AACLL,IAAAA,QAAQ,EAAEK,KAAK,CAACL,QADX;AAELC,IAAAA,MAAM,EAAEI,KAAK,CAACJ,MAFT;AAGLC,IAAAA,OAAO,EAAEG,KAAK,CAACH;AAHV,GAAP;AAKD,CAND,C,CAQA;;;AACA,MAAMI,kBAAkB,GAAGC,QAAQ,IAAI;AACrC,SAAO;AACLjB,IAAAA,WAAW,EAAE,MAAMiB,QAAQ,CAACjB,WAAW,EAAZ,CADtB;AAELQ,IAAAA,aAAa,EAAE,MAAMS,QAAQ,CAACT,aAAa,EAAd,CAFxB;AAGLP,IAAAA,SAAS,EAAEiB,OAAO,IAAID,QAAQ,CAAChB,SAAS,CAACiB,OAAD,CAAV,CAHzB;AAILhB,IAAAA,YAAY,EAAEgB,OAAO,IAAID,QAAQ,CAACf,YAAY,CAACgB,OAAD,CAAb;AAJ5B,GAAP;AAMD,CAPD,C,CASA;;;AACA,eAAerB,OAAO,CAACiB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6Cb,iBAA7C,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux';\n\nimport ProjectFilters from '../components/projects/ProjectFilters'\nimport ProjectList from '../components/projects/ProjectList'\nimport { fetchStacks } from \"../actions/fetchStacks\";\nimport { addFilter, removeFilter } from '../../actions/filterProjects';\n// import { filterProjects } from \"../actions/filterProjects\";\n\nclass ProjectsContainer extends Component {\n  componentDidMount() {\n    console.log(this.props)\n    this.props.fetchStacks()\n    this.props.fetchProjects()\n  }\n\n  render() {\n    const { projects, stacks, loading, addFilter, removeFilter } = this.props\n    return (\n      <div>\n        {\n          this.props.loading ?\n            <h2>Loading...</h2>\n            :\n            < >\n              <ProjectFilters stacks={this.props.stacks} addFilter={this.props.filterProjects} />\n              <ProjectList projects={this.props.projects} />\n            </ >\n        }\n      </div>\n    )\n  }\n}\n\n//passing in the state from the Redux store\n// so we can acccess values in our stores as props\nconst mapStateToProps = state => {\n  return {\n    projects: state.projects,\n    stacks: state.stacks,\n    loading: state.loading\n  }\n}\n\n// gives us ability to dispatch new actions to our store directly from this component\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchStacks: () => dispatch(fetchStacks()),\n    fetchProjects: () => dispatch(fetchProjects()),\n    addFilter: stackId => dispatch(addFilter(stackId)),\n    removeFilter: stackId => dispatch(removeFilter(stackId))\n  }\n}\n\n// connect redux store to this component\nexport default connect(mapStateToProps, mapDispatchToProps)(ProjectsContainer)"]},"metadata":{},"sourceType":"module"}