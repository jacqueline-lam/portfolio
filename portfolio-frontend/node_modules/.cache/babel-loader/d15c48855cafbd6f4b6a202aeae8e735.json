{"ast":null,"code":"var _jsxFileName = \"/Users/jackie.lam/Projects/portfolio/portfolio-frontend/src/components/projects/FilterButton.js\";\nimport React, { Component } from 'react';\nimport 'bootswatch/dist/litera/bootstrap.min.css';\n\nclass FilterButton extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      selected: false\n    };\n\n    this.getButtonClassnames = () => {\n      const {\n        selected\n      } = this.state;\n      let renderClasses = \"btn btn-outline-info btn-sm\";\n\n      if (selected) {\n        renderClasses = \"btn btn-outline-info btn-sm active\";\n      }\n\n      return renderClasses;\n    };\n\n    this.handleOnClick = event => {\n      // let pressed = (event.target.getAttribute(\"aria-pressed\") === \"true\");\n      let pressed = this.state.selected;\n      console.log(this.state.selected);\n      const stackClicked = event.target.id; // // setState will update state so that selected is reversed\n      // this.setState(prevState => ({\n      //   selected: !prevState.selected\n      // }));\n\n      if (!pressed) {\n        // dispatch will be called with the action type 'ADD_FILTER'\n        this.props.addFilter(stackClicked);\n        this.setState({\n          selected: true\n        }); // event.target.setAttribute(\"aria-pressed\", \"true\")\n        // event.target.classList.add('active')\n      } else {\n        this.props.removeFilter(stackClicked);\n        this.setState({\n          selected: false\n        }); // event.target.setAttribute(\"aria-pressed\", \"false\")\n        // event.target.classList.remove('active')\n      }\n    };\n  }\n\n  componentDidMount() {\n    const {\n      selectedStackIds,\n      stack\n    } = this.props;\n    const myStackId = stack.id;\n    this.setState({\n      selected: selectedStackIds.includes(myStackId.toString())\n    });\n  }\n\n  render() {\n    const {\n      stack\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"button\", {\n      id: stack.id,\n      type: \"button\",\n      className: this.getButtonClassnames(),\n      \"aria-pressed\": this.state.selected,\n      value: stack,\n      onClick: this.handleOnClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 7\n      }\n    }, stack.name);\n  }\n\n}\n\nexport default FilterButton;","map":{"version":3,"sources":["/Users/jackie.lam/Projects/portfolio/portfolio-frontend/src/components/projects/FilterButton.js"],"names":["React","Component","FilterButton","state","selected","getButtonClassnames","renderClasses","handleOnClick","event","pressed","console","log","stackClicked","target","id","props","addFilter","setState","removeFilter","componentDidMount","selectedStackIds","stack","myStackId","includes","toString","render","name"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,0CAAP;;AAEA,MAAMC,YAAN,SAA2BD,SAA3B,CAAqC;AAAA;AAAA;AAAA,SACnCE,KADmC,GAC3B;AACNC,MAAAA,QAAQ,EAAE;AADJ,KAD2B;;AAAA,SAcnCC,mBAdmC,GAcb,MAAM;AAC1B,YAAM;AAAED,QAAAA;AAAF,UAAe,KAAKD,KAA1B;AACA,UAAIG,aAAa,GAAG,6BAApB;;AACA,UAAIF,QAAJ,EAAc;AACZE,QAAAA,aAAa,GAAG,oCAAhB;AACD;;AAED,aAAOA,aAAP;AACD,KAtBkC;;AAAA,SAwBnCC,aAxBmC,GAwBnBC,KAAK,IAAI;AACvB;AACA,UAAIC,OAAO,GAAG,KAAKN,KAAL,CAAWC,QAAzB;AACAM,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKR,KAAL,CAAWC,QAAvB;AACA,YAAMQ,YAAY,GAAGJ,KAAK,CAACK,MAAN,CAAaC,EAAlC,CAJuB,CAMvB;AACA;AACA;AACA;;AAEA,UAAI,CAACL,OAAL,EAAc;AACZ;AACA,aAAKM,KAAL,CAAWC,SAAX,CAAqBJ,YAArB;AACA,aAAKK,QAAL,CAAc;AACZb,UAAAA,QAAQ,EAAE;AADE,SAAd,EAHY,CAMZ;AACA;AACD,OARD,MAQO;AACL,aAAKW,KAAL,CAAWG,YAAX,CAAwBN,YAAxB;AACA,aAAKK,QAAL,CAAc;AACZb,UAAAA,QAAQ,EAAE;AADE,SAAd,EAFK,CAKL;AACA;AACD;AACF,KAnDkC;AAAA;;AAKnCe,EAAAA,iBAAiB,GAAG;AAClB,UAAM;AAAEC,MAAAA,gBAAF;AAAoBC,MAAAA;AAApB,QAA8B,KAAKN,KAAzC;AACA,UAAMO,SAAS,GAAGD,KAAK,CAACP,EAAxB;AAEA,SAAKG,QAAL,CAAc;AACZb,MAAAA,QAAQ,EAAEgB,gBAAgB,CAACG,QAAjB,CAA0BD,SAAS,CAACE,QAAV,EAA1B;AADE,KAAd;AAGD;;AAyCDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEJ,MAAAA;AAAF,QAAY,KAAKN,KAAvB;AAEA,wBACE;AACE,MAAA,EAAE,EAAEM,KAAK,CAACP,EADZ;AAEE,MAAA,IAAI,EAAC,QAFP;AAGE,MAAA,SAAS,EAAE,KAAKT,mBAAL,EAHb;AAIE,sBAAc,KAAKF,KAAL,CAAWC,QAJ3B;AAKE,MAAA,KAAK,EAAEiB,KALT;AAME,MAAA,OAAO,EAAE,KAAKd,aANhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOGc,KAAK,CAACK,IAPT,CADF;AAWD;;AAnEkC;;AAsErC,eAAexB,YAAf","sourcesContent":["import React, { Component } from 'react';\nimport 'bootswatch/dist/litera/bootstrap.min.css';\n\nclass FilterButton extends Component {\n  state = {\n    selected: false\n  }\n\n  componentDidMount() {\n    const { selectedStackIds, stack } = this.props;\n    const myStackId = stack.id;\n\n    this.setState({\n      selected: selectedStackIds.includes(myStackId.toString())\n    });\n  }\n\n  getButtonClassnames = () => {\n    const { selected } = this.state;\n    let renderClasses = \"btn btn-outline-info btn-sm\";\n    if (selected) {\n      renderClasses = \"btn btn-outline-info btn-sm active\"\n    }\n\n    return renderClasses;\n  }\n\n  handleOnClick = event => {\n    // let pressed = (event.target.getAttribute(\"aria-pressed\") === \"true\");\n    let pressed = this.state.selected\n    console.log(this.state.selected)\n    const stackClicked = event.target.id\n\n    // // setState will update state so that selected is reversed\n    // this.setState(prevState => ({\n    //   selected: !prevState.selected\n    // }));\n\n    if (!pressed) {\n      // dispatch will be called with the action type 'ADD_FILTER'\n      this.props.addFilter(stackClicked)\n      this.setState({\n        selected: true\n      });\n      // event.target.setAttribute(\"aria-pressed\", \"true\")\n      // event.target.classList.add('active')\n    } else {\n      this.props.removeFilter(stackClicked)\n      this.setState({\n        selected: false\n      })\n      // event.target.setAttribute(\"aria-pressed\", \"false\")\n      // event.target.classList.remove('active')\n    }\n  }\n\n  render() {\n    const { stack } = this.props\n\n    return (\n      <button\n        id={stack.id}\n        type=\"button\"\n        className={this.getButtonClassnames()}\n        aria-pressed={this.state.selected}\n        value={stack}\n        onClick={this.handleOnClick}>\n        {stack.name}\n      </button >\n    );\n  }\n}\n\nexport default FilterButton;\n"]},"metadata":{},"sourceType":"module"}