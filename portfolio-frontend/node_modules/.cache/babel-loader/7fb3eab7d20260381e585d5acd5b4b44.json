{"ast":null,"code":"var _jsxFileName = \"/Users/jackie.lam/Projects/portfolio/portfolio-frontend/src/components/projects/ProjectFilters.js\";\nimport React, { Component } from 'react';\n\nclass ProjectFilters extends Component {\n  constructor(...args) {\n    super(...args);\n    this.stacks = [\"ActiveRecord\", \"BCrypt\", \"Bootstrap\", \"CRUD\", \"HTML & CSS\", \"Fetch API\", \"JavaScript\", \"MVC\", \"Nokogiri\", \"Omniauth\", \"PostgreSQL\", \"React.JS\", \"React Router\", \"Redux\", \"Redux Thunk\", \"RESTful API\", \"Ruby\", \"Ruby on Rails\", \"Sinatra\", \"SQLite3\"];\n    this.state = {\n      stacks: []\n    };\n\n    this.handleOnClick = event => {\n      let pressed = event.target.getAttribute(\"aria-pressed\") === \"true\";\n\n      if (!pressed) {\n        this.setState({\n          stacks: [...this.state.stacks, event.target.value]\n        });\n        event.target.setAttribute(\"aria-pressed\", \"true\");\n        event.target.classList.add('active');\n      } else {\n        this.setState({\n          stacks: this.state.stacks.filter(stack => stack !== event.target.value)\n        });\n        event.target.setAttribute(\"aria-pressed\", \"false\");\n        event.target.classList.remove('active');\n      }\n\n      console.log(pressed);\n      console.log(this.state.stacks);\n    };\n\n    this.renderStack = stack => {\n      return (\n        /*#__PURE__*/\n        // <label className=\"btn btn-outline-secondary\" >\n        //   <input type=\"checkbox\" autocomplete=\"off\" value={stack} onClick={this.handleOnClick} /> {stack}\n        // </label>\n        React.createElement(\"button\", {\n          type: \"button\",\n          className: \"btn btn-outline-secondary btn-sm\",\n          \"aria-pressed\": \"false\",\n          value: stack,\n          onClick: this.handleOnClick,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 7\n          }\n        }, stack)\n      );\n    };\n  }\n\n  render() {\n    return (\n      /*#__PURE__*/\n      // <div>\n      //   <form onSubmit={(event) => this.handleOnSubmit(event)}>\n      //     <button\n      //       type=\"text\"\n      //       value={this.state.bandName}\n      //       onChange={(event) => this.handleOnChange(event)} />\n      //     <input type=\"submit\" />\n      //   </form>\n      // </div>\n      React.createElement(\"div\", {\n        className: \"btn-group-toggle\",\n        \"data-toggle\": \"buttons\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        type: \"button\",\n        className: \"btn btn-outline-secondary btn-sm active\",\n        \"aria-pressed\": \"true\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 9\n        }\n      }, \"All\"), this.stacks.map(stack => this.renderStack(stack)))\n    );\n  }\n\n} // const ProjectFilters = ({ projects }) => {\n//   const stacks = [\"ActiveRecord\", \"BCrypt\", \"Bootstrap\", \"CRUD\", \"HTML & CSS\", \"Fetch API\", \"JavaScript\", \"MVC\", \"Nokogiri\", \"Omniauth\", \"PostgreSQL\", \"React.JS\", \"React Router\", \"Redux\", \"Redux Thunk\", \"RESTful API\", \"Ruby\", \"Ruby on Rails\", \"Sinatra\", \"SQLite3\"]\n//   // render buttons of stacks\n//   // if a button is clicked, update chosenStacks array in state\n//   console.log(projects.map(project.stacks))\n//   // display projects with selected stacks\n//   return (\n//     <div>\n//       {projects.map(project => <ProjectList key={project.id} project={project} />)}\n//     </div>\n//   );\n// };\n\n\nexport default ProjectFilters;","map":{"version":3,"sources":["/Users/jackie.lam/Projects/portfolio/portfolio-frontend/src/components/projects/ProjectFilters.js"],"names":["React","Component","ProjectFilters","stacks","state","handleOnClick","event","pressed","target","getAttribute","setState","value","setAttribute","classList","add","filter","stack","remove","console","log","renderStack","render","map"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,MAAMC,cAAN,SAA6BD,SAA7B,CAAuC;AAAA;AAAA;AAAA,SACrCE,MADqC,GAC5B,CAAC,cAAD,EAAiB,QAAjB,EAA2B,WAA3B,EAAwC,MAAxC,EAAgD,YAAhD,EAA8D,WAA9D,EAA2E,YAA3E,EAAyF,KAAzF,EAAgG,UAAhG,EAA4G,UAA5G,EAAwH,YAAxH,EAAsI,UAAtI,EAAkJ,cAAlJ,EAAkK,OAAlK,EAA2K,aAA3K,EAA0L,aAA1L,EAAyM,MAAzM,EAAiN,eAAjN,EAAkO,SAAlO,EAA6O,SAA7O,CAD4B;AAAA,SAErCC,KAFqC,GAE7B;AACND,MAAAA,MAAM,EAAE;AADF,KAF6B;;AAAA,SAMrCE,aANqC,GAMrBC,KAAK,IAAI;AACvB,UAAIC,OAAO,GAAID,KAAK,CAACE,MAAN,CAAaC,YAAb,CAA0B,cAA1B,MAA8C,MAA7D;;AACA,UAAI,CAACF,OAAL,EAAc;AACZ,aAAKG,QAAL,CAAc;AACZP,UAAAA,MAAM,EAAE,CAAC,GAAG,KAAKC,KAAL,CAAWD,MAAf,EAAuBG,KAAK,CAACE,MAAN,CAAaG,KAApC;AADI,SAAd;AAGAL,QAAAA,KAAK,CAACE,MAAN,CAAaI,YAAb,CAA0B,cAA1B,EAA0C,MAA1C;AACAN,QAAAA,KAAK,CAACE,MAAN,CAAaK,SAAb,CAAuBC,GAAvB,CAA2B,QAA3B;AACD,OAND,MAMO;AACL,aAAKJ,QAAL,CAAc;AACZP,UAAAA,MAAM,EAAE,KAAKC,KAAL,CAAWD,MAAX,CAAkBY,MAAlB,CAAyBC,KAAK,IAAIA,KAAK,KAAKV,KAAK,CAACE,MAAN,CAAaG,KAAzD;AADI,SAAd;AAGAL,QAAAA,KAAK,CAACE,MAAN,CAAaI,YAAb,CAA0B,cAA1B,EAA0C,OAA1C;AACAN,QAAAA,KAAK,CAACE,MAAN,CAAaK,SAAb,CAAuBI,MAAvB,CAA8B,QAA9B;AACD;;AAEDC,MAAAA,OAAO,CAACC,GAAR,CAAYZ,OAAZ;AAEAW,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKf,KAAL,CAAWD,MAAvB;AACD,KAzBoC;;AAAA,SAmCrCiB,WAnCqC,GAmCvBJ,KAAK,IAAI;AACrB;AAAA;AACE;AACA;AACA;AACA;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,SAAS,EAAC,kCAAhC;AAAmE,0BAAa,OAAhF;AAAwF,UAAA,KAAK,EAAEA,KAA/F;AAAsG,UAAA,OAAO,EAAE,KAAKX,aAApH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGW,KADH;AAJF;AAQD,KA5CoC;AAAA;;AA8CrCK,EAAAA,MAAM,GAAG;AACP;AAAA;AACE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAkC,uBAAY,SAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAIE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,SAAS,EAAC,yCAAhC;AAA0E,wBAAa,MAAvF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAJF,EAQG,KAAKlB,MAAL,CAAYmB,GAAZ,CAAgBN,KAAK,IAAI,KAAKI,WAAL,CAAiBJ,KAAjB,CAAzB,CARH;AAXF;AAwBD;;AAvEoC,C,CA0EvC;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAEA,eAAed,cAAf","sourcesContent":["import React, { Component } from 'react'\n\nclass ProjectFilters extends Component {\n  stacks = [\"ActiveRecord\", \"BCrypt\", \"Bootstrap\", \"CRUD\", \"HTML & CSS\", \"Fetch API\", \"JavaScript\", \"MVC\", \"Nokogiri\", \"Omniauth\", \"PostgreSQL\", \"React.JS\", \"React Router\", \"Redux\", \"Redux Thunk\", \"RESTful API\", \"Ruby\", \"Ruby on Rails\", \"Sinatra\", \"SQLite3\"]\n  state = {\n    stacks: []\n  }\n\n  handleOnClick = event => {\n    let pressed = (event.target.getAttribute(\"aria-pressed\") === \"true\");\n    if (!pressed) {\n      this.setState({\n        stacks: [...this.state.stacks, event.target.value]\n      });\n      event.target.setAttribute(\"aria-pressed\", \"true\")\n      event.target.classList.add('active')\n    } else {\n      this.setState({\n        stacks: this.state.stacks.filter(stack => stack !== event.target.value),\n      });\n      event.target.setAttribute(\"aria-pressed\", \"false\")\n      event.target.classList.remove('active')\n    }\n\n    console.log(pressed)\n\n    console.log(this.state.stacks)\n  }\n\n  // handleOnSubmit = event => {\n  //   event.preventDefault();\n  //   this.props.filterProjects(this.state.stacks);\n  //   this.setState({\n  //     stacks: '',\n  //   });\n  // }\n\n  renderStack = stack => {\n    return (\n      // <label className=\"btn btn-outline-secondary\" >\n      //   <input type=\"checkbox\" autocomplete=\"off\" value={stack} onClick={this.handleOnClick} /> {stack}\n      // </label>\n      <button type=\"button\" className=\"btn btn-outline-secondary btn-sm\" aria-pressed='false' value={stack} onClick={this.handleOnClick}>\n        {stack}\n      </button>\n    )\n  }\n\n  render() {\n    return (\n      // <div>\n      //   <form onSubmit={(event) => this.handleOnSubmit(event)}>\n      //     <button\n      //       type=\"text\"\n      //       value={this.state.bandName}\n      //       onChange={(event) => this.handleOnChange(event)} />\n      //     <input type=\"submit\" />\n      //   </form>\n      // </div>\n\n      <div className=\"btn-group-toggle\" data-toggle=\"buttons\" >\n        {/* <label className=\"btn btn-outline-secondary active\">\n          <input type=\"checkbox\" checked=\"\"  aria-pressed=\"true\" /> All\n        </label> */}\n        <button type=\"button\" className=\"btn btn-outline-secondary btn-sm active\" aria-pressed=\"true\" >\n          All\n        </button>\n\n        {this.stacks.map(stack => this.renderStack(stack))}\n\n      </div >\n\n    );\n  }\n}\n\n// const ProjectFilters = ({ projects }) => {\n//   const stacks = [\"ActiveRecord\", \"BCrypt\", \"Bootstrap\", \"CRUD\", \"HTML & CSS\", \"Fetch API\", \"JavaScript\", \"MVC\", \"Nokogiri\", \"Omniauth\", \"PostgreSQL\", \"React.JS\", \"React Router\", \"Redux\", \"Redux Thunk\", \"RESTful API\", \"Ruby\", \"Ruby on Rails\", \"Sinatra\", \"SQLite3\"]\n\n//   // render buttons of stacks\n//   // if a button is clicked, update chosenStacks array in state\n//   console.log(projects.map(project.stacks))\n//   // display projects with selected stacks\n\n//   return (\n//     <div>\n//       {projects.map(project => <ProjectList key={project.id} project={project} />)}\n//     </div>\n//   );\n// };\n\nexport default ProjectFilters;"]},"metadata":{},"sourceType":"module"}