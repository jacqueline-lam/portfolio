{"ast":null,"code":"var _jsxFileName = \"/Users/jackie.lam/Projects/portfolio/portfolio-frontend/src/containers/ProjectsContainer.js\";\nimport React, { Component } from 'react';\nimport Projects from '../components/projects/Projects';\nimport { connect } from 'react-redux';\nimport { fetchProjects } from \"../actions/fetchProjects\";\n\nclass ProjectsContainer extends Component {\n  componentDidMount() {\n    console.log(this.props);\n    this.props.fetchProjects();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 7\n      }\n    }, this.props.loading ? /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 31\n      }\n    }, \"Loading...\") : /*#__PURE__*/React.createElement(Projects, {\n      projects: this.props.projects,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 11\n      }\n    }));\n  }\n\n} //passing in the state from the Redux store\n// so we can acccess values in our stores as props\n\n\nconst mapStateToProps = state => {\n  return {\n    projects: state.projects,\n    loading: state.loading\n  };\n}; // gives us ability to dispatch new actions to our store directly from this component\n\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchProjects: () => dispatch(fetchProjects())\n  };\n}; // connect redux store to this component\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProjectsContainer);","map":{"version":3,"sources":["/Users/jackie.lam/Projects/portfolio/portfolio-frontend/src/containers/ProjectsContainer.js"],"names":["React","Component","Projects","connect","fetchProjects","ProjectsContainer","componentDidMount","console","log","props","render","loading","projects","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,iCAArB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,aAAT,QAA8B,0BAA9B;;AAEA,MAAMC,iBAAN,SAAgCJ,SAAhC,CAA0C;AACxCK,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAjB;AACA,SAAKA,KAAL,CAAWL,aAAX;AACD;;AAEDM,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKD,KAAL,CAAWE,OAAX,gBAAqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAArB,gBACC,oBAAC,QAAD;AAAU,MAAA,QAAQ,EAAE,KAAKF,KAAL,CAAWG,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADF;AAQD;;AAfuC,C,CAkB1C;AACA;;;AACA,MAAMC,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAO;AACLF,IAAAA,QAAQ,EAAEE,KAAK,CAACF,QADX;AAELD,IAAAA,OAAO,EAAEG,KAAK,CAACH;AAFV,GAAP;AAID,CALD,C,CAOA;;;AACA,MAAMI,kBAAkB,GAAGC,QAAQ,IAAI;AACrC,SAAO;AACLZ,IAAAA,aAAa,EAAE,MAAMY,QAAQ,CAACZ,aAAa,EAAd;AADxB,GAAP;AAGD,CAJD,C,CAMA;;;AACA,eAAeD,OAAO,CAACU,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CV,iBAA7C,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport Projects from '../components/projects/Projects'\nimport { connect } from 'react-redux';\nimport { fetchProjects } from \"../actions/fetchProjects\";\n\nclass ProjectsContainer extends Component {\n  componentDidMount() {\n    console.log(this.props)\n    this.props.fetchProjects()\n  }\n\n  render() {\n    return (\n      <div>\n        {this.props.loading ? <h2>Loading...</h2> : (\n          <Projects projects={this.props.projects} />\n\n        )}\n      </div>\n    )\n  }\n}\n\n//passing in the state from the Redux store\n// so we can acccess values in our stores as props\nconst mapStateToProps = state => {\n  return {\n    projects: state.projects,\n    loading: state.loading\n  }\n}\n\n// gives us ability to dispatch new actions to our store directly from this component\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchProjects: () => dispatch(fetchProjects())\n  }\n}\n\n// connect redux store to this component\nexport default connect(mapStateToProps, mapDispatchToProps)(ProjectsContainer)"]},"metadata":{},"sourceType":"module"}