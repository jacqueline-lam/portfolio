{"ast":null,"code":"var _jsxFileName = \"/Users/jackie.lam/Projects/portfolio/portfolio-frontend/src/components/projects/ProjectDetails.js\";\nimport React from 'react';\nimport Container from 'react-bootstrap/Container';\nimport { Markup } from 'interweave';\nimport CommentsContainer from '../../containers/CommentsContainer';\n\nconst ProjectDetails = ({\n  match,\n  projects\n}) => {\n  const project = projects.find(proj => proj.id.toString() === match.params.projectId);\n\n  const renderProject = () => {\n    const projectStacks = /*#__PURE__*/React.createElement(\"div\", {\n      className: \"badge-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 7\n      }\n    }, project.stacks.map(stack => /*#__PURE__*/React.createElement(\"span\", {\n      key: stack.id,\n      className: \"badge badge-pill badge-dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 11\n      }\n    }, stack.name)));\n    const fileName = project.image_url; // special feature supported by webpack's compiler that allows you to get all matching modules starting from some base directory\n\n    const images = require.context('../../images', true);\n\n    let img = images('./' + fileName);\n    return [/*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }\n    }, \"\\xABBACK\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"component\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }\n    }, project.name), /*#__PURE__*/React.createElement(\"img\", {\n      className: \"project-thumbnail\",\n      alt: \"project thumbnail\",\n      src: img,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 12\n      }\n    }), /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }\n    }, \"Stacks\"), projectStacks, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text\",\n      id: \"project-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }\n    }, \"What is it?\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }\n    }, project.description), /*#__PURE__*/React.createElement(\"h6\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }\n    }, \"Why did I decide to build this app?\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }\n    }, project.reason), /*#__PURE__*/React.createElement(\"h6\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }\n    }, \"Features\"), /*#__PURE__*/React.createElement(Markup, {\n      content: project.features,\n      allowElements: \"true\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }\n    })), project.blog_url ? /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-outline-warning btn-lg\",\n      onClick: () => window.open(project.blog_url, \"_blank\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 31\n      }\n    }, \"Blog Post\") : null, project.github_url ? /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-outline-warning btn-lg\",\n      onClick: () => window.open(project.github_url, \"_blank\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 33\n      }\n    }, \"Source Code\") : null, project.demo_vid ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 15\n      }\n    }, \"Project Demo\"), /*#__PURE__*/React.createElement(\"iframe\", {\n      title: \"Umami Pantry Demo\",\n      width: \"560\",\n      height: \"315\",\n      src: project.demo_vid,\n      frameBorder: \"0\",\n      allow: \"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\",\n      allowFullScreen: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 15\n      }\n    })) : null, /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(CommentsContainer, {\n      project: project,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }\n    })))];\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, project ? renderProject() : null);\n};\n\nexport default ProjectDetails;","map":{"version":3,"sources":["/Users/jackie.lam/Projects/portfolio/portfolio-frontend/src/components/projects/ProjectDetails.js"],"names":["React","Container","Markup","CommentsContainer","ProjectDetails","match","projects","project","find","proj","id","toString","params","projectId","renderProject","projectStacks","stacks","map","stack","name","fileName","image_url","images","require","context","img","description","reason","features","blog_url","window","open","github_url","demo_vid"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Container from 'react-bootstrap/Container';\nimport { Markup } from 'interweave';\nimport CommentsContainer from '../../containers/CommentsContainer'\n\nconst ProjectDetails = ({ match, projects }) => {\n\n  const project = projects.find(proj => proj.id.toString() === match.params.projectId)\n  const renderProject = () => {\n    const projectStacks = (\n      <div className=\"badge-wrapper\">\n        {project.stacks.map(stack =>\n          <span key={stack.id} className=\"badge badge-pill badge-dark\">{stack.name}</span>\n        )}\n      </div>\n    );\n    const fileName = project.image_url\n    // special feature supported by webpack's compiler that allows you to get all matching modules starting from some base directory\n    const images = require.context('../../images', true)\n    let img = images('./' + fileName)\n\n    return [\n      <Container>\n        <button>&laquo;BACK</button>\n        <div className='component'>\n          <h3>{project.name}</h3>\n          {/* <img className='project-thumbnail' alt='project thumbnail' src={projectPic} /> */}\n          {<img className='project-thumbnail' alt='project thumbnail' src={img} />}\n          <h5>Stacks</h5>\n          {projectStacks}\n          <div className='text' id='project-text'>\n            <h6>What is it?</h6>\n            <p>{project.description}</p>\n            <h6>Why did I decide to build this app?</h6>\n            <p>{project.reason}</p>\n            <h6>Features</h6>\n            <Markup content={project.features} allowElements='true' />\n          </div>\n          {project.blog_url ? <button className=\"btn btn-outline-warning btn-lg\" onClick={() => window.open(project.blog_url, \"_blank\")}>Blog Post</button> : null}\n          {project.github_url ? <button className=\"btn btn-outline-warning btn-lg\" onClick={() => window.open(project.github_url, \"_blank\")}>Source Code</button> : null}\n          {project.demo_vid ?\n            <div>\n              <h5>Project Demo</h5>\n              <iframe title=\"Umami Pantry Demo\" width=\"560\" height=\"315\" src={project.demo_vid} frameBorder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowFullScreen />\n            </div>\n            :\n            null\n          }\n          <hr />\n          <CommentsContainer project={project} />\n        </div>\n      </Container>\n    ]\n  }\n\n  return (\n    < >\n      {project ? renderProject() : null}\n    </>\n  )\n}\nexport default ProjectDetails"]},"metadata":{},"sourceType":"module"}