{"ast":null,"code":"var _jsxFileName = \"/Users/jackie.lam/Projects/portfolio/portfolio-frontend/src/containers/ProjectsContainer.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Route } from 'react-router-dom';\nimport ProjectFilters from '../components/projects/ProjectFilters';\nimport ProjectList from '../components/projects/ProjectList';\nimport ProjectDetails from '../components/projects/ProjectDetails';\nimport { fetchStacks } from \"../actions/fetchStacks\";\nimport { fetchProjects } from \"../actions/fetchProjects\";\nimport { addFilter, removeFilter } from '../actions/filterProjects'; // import { filterProjects } from \"../actions/filterProjects\";\n\nclass ProjectsContainer extends Component {\n  componentDidMount() {\n    console.log(this.props);\n    this.props.fetchStacks();\n    this.props.fetchProjects();\n  }\n\n  render() {\n    console.log(this.props.projects); // const { filteredProjects, stacks, selectedStackIds, loading, addFilter, removeFilter, match } = this.props.projects\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 7\n      }\n    }, \"Test\") // <div>\n    //   {\n    //     loading ?\n    //       <h2>Loading...</h2>\n    //       :\n    //       < >\n    //         <Route path='/projects/:projectId' render={routerProps => <ProjectDetails {...routerProps} projects={filteredProjects} />} />\n    //         <Route exact path='/projects' render={routerProps =>\n    //           <div>\n    //             <ProjectFilters stacks={stacks} selectedStackIds={selectedStackIds} addFilter={addFilter} removeFilter={removeFilter} />\n    //             <ProjectList filteredProjects={filteredProjects} match={match} />\n    //           </div>\n    //         } />\n    //         {/* add `match` to the arguments so we can access the path information in `routerProps` that is passed from App.js */}\n    //         {/* replace `component` prop with the `render` prop so we can pass the route information to the `ProjectDetails` component*/}\n    //       </ >\n    //   }\n    // </div>\n    ;\n  }\n\n} //passing in the state from the Redux store\n// so we can acccess values in our stores as props\n\n\nconst mapStateToProps = state => {\n  return {\n    stacks: state.stacks,\n    filteredProjects: state.filteredProjects,\n    loading: state.loading\n  };\n}; // gives us ability to dispatch new actions to our store directly from this component\n\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchStacks: () => dispatch(fetchStacks()),\n    fetchProjects: () => dispatch(fetchProjects()),\n    addFilter: stackId => dispatch(addFilter(stackId)),\n    removeFilter: stackId => dispatch(removeFilter(stackId))\n  };\n}; // connect redux store to this component\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProjectsContainer);","map":{"version":3,"sources":["/Users/jackie.lam/Projects/portfolio/portfolio-frontend/src/containers/ProjectsContainer.js"],"names":["React","Component","connect","Route","ProjectFilters","ProjectList","ProjectDetails","fetchStacks","fetchProjects","addFilter","removeFilter","ProjectsContainer","componentDidMount","console","log","props","render","projects","mapStateToProps","state","stacks","filteredProjects","loading","mapDispatchToProps","dispatch","stackId"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AAEA,OAAOC,cAAP,MAA2B,uCAA3B;AACA,OAAOC,WAAP,MAAwB,oCAAxB;AACA,OAAOC,cAAP,MAA2B,uCAA3B;AACA,SAASC,WAAT,QAA4B,wBAA5B;AACA,SAASC,aAAT,QAA8B,0BAA9B;AACA,SAASC,SAAT,EAAoBC,YAApB,QAAwC,2BAAxC,C,CACA;;AAEA,MAAMC,iBAAN,SAAgCV,SAAhC,CAA0C;AACxCW,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAjB;AACA,SAAKA,KAAL,CAAWR,WAAX;AACA,SAAKQ,KAAL,CAAWP,aAAX;AACD;;AAEDQ,EAAAA,MAAM,GAAG;AACPH,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWE,QAAvB,EADO,CAEP;;AACA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,CAEE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AArBF;AAuBD;;AAjCuC,C,CAoC1C;AACA;;;AACA,MAAMC,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAO;AACLC,IAAAA,MAAM,EAAED,KAAK,CAACC,MADT;AAELC,IAAAA,gBAAgB,EAAEF,KAAK,CAACE,gBAFnB;AAGLC,IAAAA,OAAO,EAAEH,KAAK,CAACG;AAHV,GAAP;AAKD,CAND,C,CAQA;;;AACA,MAAMC,kBAAkB,GAAGC,QAAQ,IAAI;AACrC,SAAO;AACLjB,IAAAA,WAAW,EAAE,MAAMiB,QAAQ,CAACjB,WAAW,EAAZ,CADtB;AAELC,IAAAA,aAAa,EAAE,MAAMgB,QAAQ,CAAChB,aAAa,EAAd,CAFxB;AAGLC,IAAAA,SAAS,EAAEgB,OAAO,IAAID,QAAQ,CAACf,SAAS,CAACgB,OAAD,CAAV,CAHzB;AAILf,IAAAA,YAAY,EAAEe,OAAO,IAAID,QAAQ,CAACd,YAAY,CAACe,OAAD,CAAb;AAJ5B,GAAP;AAMD,CAPD,C,CASA;;;AACA,eAAevB,OAAO,CAACgB,eAAD,EAAkBK,kBAAlB,CAAP,CAA6CZ,iBAA7C,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux';\nimport { Route } from 'react-router-dom';\n\nimport ProjectFilters from '../components/projects/ProjectFilters'\nimport ProjectList from '../components/projects/ProjectList'\nimport ProjectDetails from '../components/projects/ProjectDetails'\nimport { fetchStacks } from \"../actions/fetchStacks\";\nimport { fetchProjects } from \"../actions/fetchProjects\";\nimport { addFilter, removeFilter } from '../actions/filterProjects';\n// import { filterProjects } from \"../actions/filterProjects\";\n\nclass ProjectsContainer extends Component {\n  componentDidMount() {\n    console.log(this.props)\n    this.props.fetchStacks()\n    this.props.fetchProjects()\n  }\n\n  render() {\n    console.log(this.props.projects)\n    // const { filteredProjects, stacks, selectedStackIds, loading, addFilter, removeFilter, match } = this.props.projects\n    return (\n      <div>Test</div>\n      // <div>\n      //   {\n      //     loading ?\n      //       <h2>Loading...</h2>\n      //       :\n      //       < >\n      //         <Route path='/projects/:projectId' render={routerProps => <ProjectDetails {...routerProps} projects={filteredProjects} />} />\n      //         <Route exact path='/projects' render={routerProps =>\n      //           <div>\n      //             <ProjectFilters stacks={stacks} selectedStackIds={selectedStackIds} addFilter={addFilter} removeFilter={removeFilter} />\n      //             <ProjectList filteredProjects={filteredProjects} match={match} />\n      //           </div>\n      //         } />\n      //         {/* add `match` to the arguments so we can access the path information in `routerProps` that is passed from App.js */}\n      //         {/* replace `component` prop with the `render` prop so we can pass the route information to the `ProjectDetails` component*/}\n\n      //       </ >\n      //   }\n\n      // </div>\n    )\n  }\n}\n\n//passing in the state from the Redux store\n// so we can acccess values in our stores as props\nconst mapStateToProps = state => {\n  return {\n    stacks: state.stacks,\n    filteredProjects: state.filteredProjects,\n    loading: state.loading\n  }\n}\n\n// gives us ability to dispatch new actions to our store directly from this component\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchStacks: () => dispatch(fetchStacks()),\n    fetchProjects: () => dispatch(fetchProjects()),\n    addFilter: stackId => dispatch(addFilter(stackId)),\n    removeFilter: stackId => dispatch(removeFilter(stackId))\n  }\n}\n\n// connect redux store to this component\nexport default connect(mapStateToProps, mapDispatchToProps)(ProjectsContainer)"]},"metadata":{},"sourceType":"module"}