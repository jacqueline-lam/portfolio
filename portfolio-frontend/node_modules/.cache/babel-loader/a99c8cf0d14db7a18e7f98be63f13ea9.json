{"ast":null,"code":"var _jsxFileName = \"/Users/jackie.lam/Projects/portfolio/portfolio-frontend/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css'; // Any component wrapped in Provider will have access to redux store\n\nimport { Provider } from 'react-redux'; // Compose combine diff middlewares into 1 - so we can pass in all middleware as one argument in createStore\n\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport App from './App';\nimport projectsReducer from './reducers/projectsReducer'; // enable Redux DevTools Extension\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose; // Pass reducer into createStore, assigning return value to store\n// configure thunk by passing in thunk as part of the composeEnhancer\n// STORE = where you store data globally\n// REDUCER = tell us what we want to do w/ stores based on certain ACTIONS\n// ACTIONS will be dispatched to our reducer\n\nconst store = createStore(projectsReducer, composeEnhancers(applyMiddleware(thunk)));\nReactDOM.render( /*#__PURE__*/React.createElement(Provider, {\n  store: store,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }\n})), document.getElementById('root')); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();","map":{"version":3,"sources":["/Users/jackie.lam/Projects/portfolio/portfolio-frontend/src/index.js"],"names":["React","ReactDOM","Provider","createStore","applyMiddleware","compose","thunk","App","projectsReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP,C,CACA;;AACA,SAASC,QAAT,QAAyB,aAAzB,C,CACA;;AACA,SAASC,WAAT,EAAsBC,eAAtB,EAAuCC,OAAvC,QAAsD,OAAtD;AACA,OAAOC,KAAP,MAAkB,aAAlB;AAEA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,eAAP,MAA4B,4BAA5B,C,CAEA;;AACA,MAAMC,gBAAgB,GAAGC,MAAM,CAACC,oCAAP,IAA+CN,OAAxE,C,CAEA;AACA;AACA;AACA;AACA;;AACA,MAAMO,KAAK,GAAGT,WAAW,CACvBK,eADuB,EAEvBC,gBAAgB,CAACL,eAAe,CAACE,KAAD,CAAhB,CAFO,CAAzB;AAKAL,QAAQ,CAACY,MAAT,eACE,oBAAC,QAAD;AAAU,EAAA,KAAK,EAAED,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CADF,EAIEE,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAJF,E,CAOA;AACA;AACA;AACA","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n// Any component wrapped in Provider will have access to redux store\nimport { Provider } from 'react-redux';\n// Compose combine diff middlewares into 1 - so we can pass in all middleware as one argument in createStore\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport App from './App';\nimport projectsReducer from './reducers/projectsReducer'\n\n// enable Redux DevTools Extension\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\n// Pass reducer into createStore, assigning return value to store\n// configure thunk by passing in thunk as part of the composeEnhancer\n// STORE = where you store data globally\n// REDUCER = tell us what we want to do w/ stores based on certain ACTIONS\n// ACTIONS will be dispatched to our reducer\nconst store = createStore(\n  projectsReducer,\n  composeEnhancers(applyMiddleware(thunk))\n)\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}