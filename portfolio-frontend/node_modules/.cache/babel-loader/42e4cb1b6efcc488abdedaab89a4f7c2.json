{"ast":null,"code":"var _jsxFileName = \"/Users/jackie.lam/Projects/portfolio/portfolio-frontend/src/components/projects/ProjectFilters.js\";\nimport React, { Component } from 'react';\n\nclass ProjectFilters extends Component {\n  constructor(...args) {\n    super(...args);\n    this.stacks = [\"ActiveRecord\", \"BCrypt\", \"Bootstrap\", \"CRUD\", \"HTML & CSS\", \"Fetch API\", \"JavaScript\", \"MVC\", \"Nokogiri\", \"Omniauth\", \"PostgreSQL\", \"React.JS\", \"React Router\", \"Redux\", \"Redux Thunk\", \"RESTful API\", \"Ruby\", \"Ruby on Rails\", \"Sinatra\", \"SQLite3\"];\n    this.state = {\n      stacks: []\n    };\n\n    this.handleOnClick = event => {\n      let pressed = event.target.getAttribute(\"aria-pressed\") === \"true\";\n      const stackClicked = event.target.value;\n\n      if (!pressed) {\n        this.setState(prevState => ({\n          stacks: [...prevState.stacks, stackClicked]\n        }));\n        event.target.setAttribute(\"aria-pressed\", \"true\");\n        event.target.classList.add('active');\n      } else {\n        this.setState(prevState => ({\n          stacks: prevState.stacks.filter(stack => stack !== stackClicked)\n        }));\n        event.target.setAttribute(\"aria-pressed\", \"false\");\n        event.target.classList.remove('active');\n      } // this.props.filterProjects(this.state.stacks);\n      // console.log(pressed)\n      // console.log(this.state.stacks)\n\n    };\n\n    this.renderStack = stack => {\n      return /*#__PURE__*/React.createElement(\"label\", {\n        className: \"btn btn-outline-secondary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"checkbox\",\n        autocomplete: \"off\",\n        value: stack,\n        \"aria-pressed\": \"false\",\n        onClick: this.handleOnClick,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 9\n        }\n      }), \" \", stack) // <button type=\"button\" className=\"btn btn-outline-primary btn-sm\" aria-pressed='false' value={stack} onClick={this.handleOnClick}>\n      //   {stack}\n      // </button>\n      ;\n    };\n  }\n\n  render() {\n    return (\n      /*#__PURE__*/\n      // <div>\n      //   <form onSubmit={(event) => this.handleOnSubmit(event)}>\n      //     <button\n      //       type=\"text\"\n      //       value={this.state.bandName}\n      //       onChange={(event) => this.handleOnChange(event)} />\n      //     <input type=\"submit\" />\n      //   </form>\n      // </div>\n      React.createElement(\"div\", {\n        className: \"btn-group-toggle\",\n        \"data-toggle\": \"buttons\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"form\", {\n        onSubmit: this.handleOnSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"fieldset\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        className: \"btn btn-outline-secondary active\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"checkbox\",\n        checked: \"\",\n        \"aria-pressed\": \"true\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 15\n        }\n      }), \" All\"), this.stacks.map(stack => this.renderStack(stack)), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"submit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }\n      }))))\n    );\n  }\n\n} // const ProjectFilters = ({ projects }) => {\n//   const stacks = [\"ActiveRecord\", \"BCrypt\", \"Bootstrap\", \"CRUD\", \"HTML & CSS\", \"Fetch API\", \"JavaScript\", \"MVC\", \"Nokogiri\", \"Omniauth\", \"PostgreSQL\", \"React.JS\", \"React Router\", \"Redux\", \"Redux Thunk\", \"RESTful API\", \"Ruby\", \"Ruby on Rails\", \"Sinatra\", \"SQLite3\"]\n//   // render buttons of stacks\n//   // if a button is clicked, update chosenStacks array in state\n//   console.log(projects.map(project.stacks))\n//   // display projects with selected stacks\n//   return (\n//     <div>\n//       {projects.map(project => <ProjectList key={project.id} project={project} />)}\n//     </div>\n//   );\n// };\n\n\nexport default ProjectFilters;","map":{"version":3,"sources":["/Users/jackie.lam/Projects/portfolio/portfolio-frontend/src/components/projects/ProjectFilters.js"],"names":["React","Component","ProjectFilters","stacks","state","handleOnClick","event","pressed","target","getAttribute","stackClicked","value","setState","prevState","setAttribute","classList","add","filter","stack","remove","renderStack","render","handleOnSubmit","map"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\n\nclass ProjectFilters extends Component {\n  stacks = [\"ActiveRecord\", \"BCrypt\", \"Bootstrap\", \"CRUD\", \"HTML & CSS\", \"Fetch API\", \"JavaScript\", \"MVC\", \"Nokogiri\", \"Omniauth\", \"PostgreSQL\", \"React.JS\", \"React Router\", \"Redux\", \"Redux Thunk\", \"RESTful API\", \"Ruby\", \"Ruby on Rails\", \"Sinatra\", \"SQLite3\"]\n  state = {\n    stacks: []\n  }\n\n  handleOnClick = event => {\n    let pressed = (event.target.getAttribute(\"aria-pressed\") === \"true\");\n    const stackClicked = event.target.value\n\n    if (!pressed) {\n      this.setState(prevState => ({\n        stacks: [...prevState.stacks, stackClicked]\n      }));\n      event.target.setAttribute(\"aria-pressed\", \"true\")\n      event.target.classList.add('active')\n    } else {\n      this.setState(prevState => ({\n        stacks: prevState.stacks.filter(stack => stack !== stackClicked),\n      }));\n      event.target.setAttribute(\"aria-pressed\", \"false\")\n      event.target.classList.remove('active')\n    }\n\n    // this.props.filterProjects(this.state.stacks);\n    // console.log(pressed)\n    // console.log(this.state.stacks)\n  }\n\n  // handleOnSubmit = event => {\n  //   event.preventDefault();\n  //   this.props.filterProjects(this.state.stacks);\n  //   this.setState({\n  //     stacks: '',\n  //   });\n  // }\n\n  renderStack = stack => {\n    return (\n      <label className=\"btn btn-outline-secondary\" >\n        <input type=\"checkbox\" autocomplete=\"off\" value={stack} aria-pressed=\"false\" onClick={this.handleOnClick} /> {stack}\n      </label>\n      // <button type=\"button\" className=\"btn btn-outline-primary btn-sm\" aria-pressed='false' value={stack} onClick={this.handleOnClick}>\n      //   {stack}\n      // </button>\n    )\n  }\n\n  render() {\n    return (\n      // <div>\n      //   <form onSubmit={(event) => this.handleOnSubmit(event)}>\n      //     <button\n      //       type=\"text\"\n      //       value={this.state.bandName}\n      //       onChange={(event) => this.handleOnChange(event)} />\n      //     <input type=\"submit\" />\n      //   </form>\n      // </div>\n\n      <div className=\"btn-group-toggle\" data-toggle=\"buttons\" >\n        <form onSubmit={this.handleOnSubmit}>\n          <fieldset>\n            <label className=\"btn btn-outline-secondary active\">\n              <input type=\"checkbox\" checked=\"\" aria-pressed=\"true\" /> All\n            </label>\n            {/* <button type=\"button\" className=\"btn btn-outline-primary btn-sm active\" aria-pressed=\"true\" >\n            All\n          </button> */}\n            {this.stacks.map(stack => this.renderStack(stack))}\n            <input type=\"submit\" />\n          </fieldset>\n        </form>\n      </div >\n\n    );\n  }\n}\n\n// const ProjectFilters = ({ projects }) => {\n//   const stacks = [\"ActiveRecord\", \"BCrypt\", \"Bootstrap\", \"CRUD\", \"HTML & CSS\", \"Fetch API\", \"JavaScript\", \"MVC\", \"Nokogiri\", \"Omniauth\", \"PostgreSQL\", \"React.JS\", \"React Router\", \"Redux\", \"Redux Thunk\", \"RESTful API\", \"Ruby\", \"Ruby on Rails\", \"Sinatra\", \"SQLite3\"]\n\n//   // render buttons of stacks\n//   // if a button is clicked, update chosenStacks array in state\n//   console.log(projects.map(project.stacks))\n//   // display projects with selected stacks\n\n//   return (\n//     <div>\n//       {projects.map(project => <ProjectList key={project.id} project={project} />)}\n//     </div>\n//   );\n// };\n\nexport default ProjectFilters;"]},"metadata":{},"sourceType":"module"}