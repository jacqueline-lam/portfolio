{"ast":null,"code":"var _jsxFileName = \"/Users/jackie.lam/Projects/portfolio/portfolio-frontend/src/components/projects/ProjectFilters.js\";\nimport React, { Component } from 'react';\nimport { addFilter, removeFilter } from '../../actions/filterProjects';\n\nclass ProjectFilters extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      stack: ''\n    };\n\n    this.handleOnClick = event => {\n      console.log(event.target);\n      let pressed = event.target.getAttribute(\"aria-pressed\") === \"true\";\n      const stackClicked = event.target.value;\n\n      if (!pressed) {\n        debugger; // addFilter(stack)\n        // this.setState(prevState => ({\n        //   stacks: [...prevState.stacks, stackClicked]\n        // }));\n        // this.setState({\n        //   stack: stackClicked\n        // });\n\n        event.target.setAttribute(\"aria-pressed\", \"true\");\n        event.target.classList.add('active');\n      } else {\n        //   // this.setState(prevState => ({\n        //   //   stacks: prevState.stacks.filter(stack => stack !== stackClicked),\n        //   // }));\n        //   this.setState({\n        //     stack: ''\n        //   })\n        // removeFilter(stack)\n        event.target.setAttribute(\"aria-pressed\", \"false\");\n        event.target.classList.remove('active');\n      } // this.props.filterProjects(this.state.stack);\n\n\n      this.props.filterProjects(event.target.value);\n    };\n\n    this.renderStackBtn = stack => {\n      return (\n        /*#__PURE__*/\n        // <label className=\"btn btn-outline-secondary\" >\n        //   <input type=\"checkbox\" autocomplete=\"off\" value={stack} aria-pressed=\"false\" onClick={this.handleOnClick} /> {stack}\n        // </label>\n        React.createElement(\"button\", {\n          key: stack.id,\n          id: stack.id,\n          type: \"button\",\n          className: \"btn btn-outline-primary btn-sm\",\n          \"aria-pressed\": \"false\",\n          value: stack,\n          onClick: this.handleOnClick,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 7\n          }\n        }, stack.name)\n      );\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }\n    }, \"Filter projects by stacks\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"btn-group-toggle\",\n      \"data-toggle\": \"buttons\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }\n    }, this.props.stacks.map(stack => this.renderStackBtn(stack))));\n  }\n\n} // const ProjectFilters = ({ projects }) => {\n//   // render buttons of stacks\n//   // if a button is clicked, update chosenStacks array in state\n//   console.log(projects.map(project.stacks))\n//   // display projects with selected stacks\n//   return (\n//     <div>\n//       {projects.map(project => <ProjectList key={project.id} project={project} />)}\n//     </div>\n//   );\n// };\n\n\nexport default ProjectFilters;","map":{"version":3,"sources":["/Users/jackie.lam/Projects/portfolio/portfolio-frontend/src/components/projects/ProjectFilters.js"],"names":["React","Component","addFilter","removeFilter","ProjectFilters","state","stack","handleOnClick","event","console","log","target","pressed","getAttribute","stackClicked","value","setAttribute","classList","add","remove","props","filterProjects","renderStackBtn","id","name","render","stacks","map"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,SAAT,EAAoBC,YAApB,QAAwC,8BAAxC;;AAEA,MAAMC,cAAN,SAA6BH,SAA7B,CAAuC;AAAA;AAAA;AAAA,SACrCI,KADqC,GAC7B;AACNC,MAAAA,KAAK,EAAE;AADD,KAD6B;;AAAA,SAKrCC,aALqC,GAKrBC,KAAK,IAAI;AACvBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,MAAlB;AACA,UAAIC,OAAO,GAAIJ,KAAK,CAACG,MAAN,CAAaE,YAAb,CAA0B,cAA1B,MAA8C,MAA7D;AACA,YAAMC,YAAY,GAAGN,KAAK,CAACG,MAAN,CAAaI,KAAlC;;AAEA,UAAI,CAACH,OAAL,EAAc;AACZ,iBADY,CAEZ;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEAJ,QAAAA,KAAK,CAACG,MAAN,CAAaK,YAAb,CAA0B,cAA1B,EAA0C,MAA1C;AACAR,QAAAA,KAAK,CAACG,MAAN,CAAaM,SAAb,CAAuBC,GAAvB,CAA2B,QAA3B;AACD,OAbD,MAaO;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACAV,QAAAA,KAAK,CAACG,MAAN,CAAaK,YAAb,CAA0B,cAA1B,EAA0C,OAA1C;AACAR,QAAAA,KAAK,CAACG,MAAN,CAAaM,SAAb,CAAuBE,MAAvB,CAA8B,QAA9B;AACD,OA5BsB,CA6BvB;;;AACA,WAAKC,KAAL,CAAWC,cAAX,CAA0Bb,KAAK,CAACG,MAAN,CAAaI,KAAvC;AACD,KApCoC;;AAAA,SA8CrCO,cA9CqC,GA8CpBhB,KAAK,IAAI;AACxB;AAAA;AACE;AACA;AACA;AACA;AACE,UAAA,GAAG,EAAEA,KAAK,CAACiB,EADb;AAEE,UAAA,EAAE,EAAEjB,KAAK,CAACiB,EAFZ;AAGE,UAAA,IAAI,EAAC,QAHP;AAIE,UAAA,SAAS,EAAC,gCAJZ;AAKE,0BAAa,OALf;AAME,UAAA,KAAK,EAAEjB,KANT;AAOE,UAAA,OAAO,EAAE,KAAKC,aAPhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAQGD,KAAK,CAACkB,IART;AAJF;AAeD,KA9DoC;AAAA;;AAgErCC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCADF,eAEE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAkC,qBAAY,SAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKL,KAAL,CAAWM,MAAX,CAAkBC,GAAlB,CAAsBrB,KAAK,IAAI,KAAKgB,cAAL,CAAoBhB,KAApB,CAA/B,CADH,CAFF,CADF;AAQD;;AAzEoC,C,CA4EvC;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAEA,eAAeF,cAAf","sourcesContent":["import React, { Component } from 'react';\nimport { addFilter, removeFilter } from '../../actions/filterProjects';\n\nclass ProjectFilters extends Component {\n  state = {\n    stack: ''\n  }\n\n  handleOnClick = event => {\n    console.log(event.target)\n    let pressed = (event.target.getAttribute(\"aria-pressed\") === \"true\");\n    const stackClicked = event.target.value\n\n    if (!pressed) {\n      debugger\n      // addFilter(stack)\n\n      // this.setState(prevState => ({\n      //   stacks: [...prevState.stacks, stackClicked]\n      // }));\n      // this.setState({\n      //   stack: stackClicked\n      // });\n\n      event.target.setAttribute(\"aria-pressed\", \"true\")\n      event.target.classList.add('active')\n    } else {\n      //   // this.setState(prevState => ({\n      //   //   stacks: prevState.stacks.filter(stack => stack !== stackClicked),\n      //   // }));\n      //   this.setState({\n      //     stack: ''\n      //   })\n      // removeFilter(stack)\n      event.target.setAttribute(\"aria-pressed\", \"false\")\n      event.target.classList.remove('active')\n    }\n    // this.props.filterProjects(this.state.stack);\n    this.props.filterProjects(event.target.value)\n  }\n\n  // handleOnSubmit = event => {\n  //   event.preventDefault();\n  //   this.props.filterProjects(this.state.stacks);\n  //   this.setState({\n  //     stacks: '',\n  //   });\n  // }\n\n  renderStackBtn = stack => {\n    return (\n      // <label className=\"btn btn-outline-secondary\" >\n      //   <input type=\"checkbox\" autocomplete=\"off\" value={stack} aria-pressed=\"false\" onClick={this.handleOnClick} /> {stack}\n      // </label>\n      <button\n        key={stack.id}\n        id={stack.id}\n        type=\"button\"\n        className=\"btn btn-outline-primary btn-sm\"\n        aria-pressed='false'\n        value={stack}\n        onClick={this.handleOnClick}>\n        {stack.name}\n      </button>\n    )\n  }\n\n  render() {\n    return (\n      <div>\n        <p>Filter projects by stacks</p>\n        <div className=\"btn-group-toggle\" data-toggle=\"buttons\" >\n          {this.props.stacks.map(stack => this.renderStackBtn(stack))}\n        </div>\n      </div>\n    );\n  }\n}\n\n// const ProjectFilters = ({ projects }) => {\n\n//   // render buttons of stacks\n//   // if a button is clicked, update chosenStacks array in state\n//   console.log(projects.map(project.stacks))\n//   // display projects with selected stacks\n\n//   return (\n//     <div>\n//       {projects.map(project => <ProjectList key={project.id} project={project} />)}\n//     </div>\n//   );\n// };\n\nexport default ProjectFilters;"]},"metadata":{},"sourceType":"module"}