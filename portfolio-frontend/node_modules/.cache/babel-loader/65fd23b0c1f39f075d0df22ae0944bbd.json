{"ast":null,"code":"var _jsxFileName = \"/Users/jackie.lam/Projects/portfolio/portfolio-frontend/src/containers/ProjectsContainer.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Route } from 'react-router-dom';\nimport ProjectFilters from '../components/projects/ProjectFilters';\nimport ProjectList from '../components/projects/ProjectList';\nimport { fetchStacks } from \"../actions/fetchStacks\";\nimport { fetchProjects } from \"../actions/fetchProjects\";\nimport { addFilter, removeFilter } from '../actions/filterProjects'; // import { filterProjects } from \"../actions/filterProjects\";\n\nclass ProjectsContainer extends Component {\n  componentDidMount() {\n    console.log(this.props);\n    this.props.fetchStacks();\n    this.props.fetchProjects();\n  }\n\n  render() {\n    const {\n      filteredProjects,\n      stacks,\n      selectedStackIds,\n      loading,\n      addFilter,\n      removeFilter\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 7\n      }\n    }, loading ? /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }\n    }, \"Loading...\") : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ProjectFilters, {\n      stacks: stacks,\n      selectedStackIds: selectedStackIds,\n      addFilter: addFilter,\n      removeFilter: removeFilter,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(ProjectList, {\n      filteredProjects: filteredProjects,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 15\n      }\n    })));\n  }\n\n} //passing in the state from the Redux store\n// so we can acccess values in our stores as props\n\n\nconst mapStateToProps = state => {\n  return {\n    stacks: state.stacks,\n    filteredProjects: state.filteredProjects,\n    loading: state.loading\n  };\n}; // gives us ability to dispatch new actions to our store directly from this component\n\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchStacks: () => dispatch(fetchStacks()),\n    fetchProjects: () => dispatch(fetchProjects()),\n    addFilter: stackId => dispatch(addFilter(stackId)),\n    removeFilter: stackId => dispatch(removeFilter(stackId))\n  };\n}; // connect redux store to this component\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProjectsContainer);","map":{"version":3,"sources":["/Users/jackie.lam/Projects/portfolio/portfolio-frontend/src/containers/ProjectsContainer.js"],"names":["React","Component","connect","Route","ProjectFilters","ProjectList","fetchStacks","fetchProjects","addFilter","removeFilter","ProjectsContainer","componentDidMount","console","log","props","render","filteredProjects","stacks","selectedStackIds","loading","mapStateToProps","state","mapDispatchToProps","dispatch","stackId"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AAEA,OAAOC,cAAP,MAA2B,uCAA3B;AACA,OAAOC,WAAP,MAAwB,oCAAxB;AACA,SAASC,WAAT,QAA4B,wBAA5B;AACA,SAASC,aAAT,QAA8B,0BAA9B;AACA,SAASC,SAAT,EAAoBC,YAApB,QAAwC,2BAAxC,C,CACA;;AAEA,MAAMC,iBAAN,SAAgCT,SAAhC,CAA0C;AACxCU,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAjB;AACA,SAAKA,KAAL,CAAWR,WAAX;AACA,SAAKQ,KAAL,CAAWP,aAAX;AACD;;AAEDQ,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,gBAAF;AAAoBC,MAAAA,MAApB;AAA4BC,MAAAA,gBAA5B;AAA8CC,MAAAA,OAA9C;AAAuDX,MAAAA,SAAvD;AAAkEC,MAAAA;AAAlE,QAAmF,KAAKK,KAA9F;AACA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEIK,OAAO,gBACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADK,gBAGL,uDACE,oBAAC,cAAD;AAAgB,MAAA,MAAM,EAAEF,MAAxB;AAAgC,MAAA,gBAAgB,EAAEC,gBAAlD;AAAoE,MAAA,SAAS,EAAEV,SAA/E;AAA0F,MAAA,YAAY,EAAEC,YAAxG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE,oBAAC,WAAD;AAAa,MAAA,gBAAgB,EAAEO,gBAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CALN,CADF;AAaD;;AAtBuC,C,CAyB1C;AACA;;;AACA,MAAMI,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAO;AACLJ,IAAAA,MAAM,EAAEI,KAAK,CAACJ,MADT;AAELD,IAAAA,gBAAgB,EAAEK,KAAK,CAACL,gBAFnB;AAGLG,IAAAA,OAAO,EAAEE,KAAK,CAACF;AAHV,GAAP;AAKD,CAND,C,CAQA;;;AACA,MAAMG,kBAAkB,GAAGC,QAAQ,IAAI;AACrC,SAAO;AACLjB,IAAAA,WAAW,EAAE,MAAMiB,QAAQ,CAACjB,WAAW,EAAZ,CADtB;AAELC,IAAAA,aAAa,EAAE,MAAMgB,QAAQ,CAAChB,aAAa,EAAd,CAFxB;AAGLC,IAAAA,SAAS,EAAEgB,OAAO,IAAID,QAAQ,CAACf,SAAS,CAACgB,OAAD,CAAV,CAHzB;AAILf,IAAAA,YAAY,EAAEe,OAAO,IAAID,QAAQ,CAACd,YAAY,CAACe,OAAD,CAAb;AAJ5B,GAAP;AAMD,CAPD,C,CASA;;;AACA,eAAetB,OAAO,CAACkB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CZ,iBAA7C,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux';\nimport { Route } from 'react-router-dom';\n\nimport ProjectFilters from '../components/projects/ProjectFilters'\nimport ProjectList from '../components/projects/ProjectList'\nimport { fetchStacks } from \"../actions/fetchStacks\";\nimport { fetchProjects } from \"../actions/fetchProjects\";\nimport { addFilter, removeFilter } from '../actions/filterProjects';\n// import { filterProjects } from \"../actions/filterProjects\";\n\nclass ProjectsContainer extends Component {\n  componentDidMount() {\n    console.log(this.props)\n    this.props.fetchStacks()\n    this.props.fetchProjects()\n  }\n\n  render() {\n    const { filteredProjects, stacks, selectedStackIds, loading, addFilter, removeFilter } = this.props\n    return (\n      <div>\n        {\n          loading ?\n            <h2>Loading...</h2>\n            :\n            < >\n              <ProjectFilters stacks={stacks} selectedStackIds={selectedStackIds} addFilter={addFilter} removeFilter={removeFilter} />\n              <ProjectList filteredProjects={filteredProjects} />\n            </ >\n        }\n      </div>\n    )\n  }\n}\n\n//passing in the state from the Redux store\n// so we can acccess values in our stores as props\nconst mapStateToProps = state => {\n  return {\n    stacks: state.stacks,\n    filteredProjects: state.filteredProjects,\n    loading: state.loading\n  }\n}\n\n// gives us ability to dispatch new actions to our store directly from this component\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchStacks: () => dispatch(fetchStacks()),\n    fetchProjects: () => dispatch(fetchProjects()),\n    addFilter: stackId => dispatch(addFilter(stackId)),\n    removeFilter: stackId => dispatch(removeFilter(stackId))\n  }\n}\n\n// connect redux store to this component\nexport default connect(mapStateToProps, mapDispatchToProps)(ProjectsContainer)"]},"metadata":{},"sourceType":"module"}