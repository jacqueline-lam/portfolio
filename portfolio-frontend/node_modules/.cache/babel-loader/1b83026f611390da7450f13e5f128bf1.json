{"ast":null,"code":"var _jsxFileName = \"/Users/jackie.lam/Projects/portfolio/portfolio-frontend/src/containers/ProjectsContainer.js\";\nimport React, { Component } from 'react';\nimport ProjectFilters from '../components/projects/ProjectFilters';\nimport ProjectList from '../components/projects/ProjectList';\nimport { connect } from 'react-redux';\nimport { fetchProjects } from \"../actions/fetchProjects\";\n\nclass ProjectsContainer extends Component {\n  componentDidMount() {\n    console.log(this.props);\n    this.props.fetchProjects();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(ProjectFilters, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(ProjectList, {\n      projects: this.props.projects,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }\n    }));\n  }\n\n} //passing in the state from the Redux store\n// so we can acccess values in our stores as props\n\n\nconst mapStateToProps = state => {\n  return {\n    projects: state.projects,\n    loading: state.loading\n  };\n}; // gives us ability to dispatch new actions to our store directly from this component\n\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchProjects: () => dispatch(fetchProjects())\n  };\n}; // connect redux store to this component\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProjectsContainer);","map":{"version":3,"sources":["/Users/jackie.lam/Projects/portfolio/portfolio-frontend/src/containers/ProjectsContainer.js"],"names":["React","Component","ProjectFilters","ProjectList","connect","fetchProjects","ProjectsContainer","componentDidMount","console","log","props","render","projects","mapStateToProps","state","loading","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,cAAP,MAA2B,uCAA3B;AACA,OAAOC,WAAP,MAAwB,oCAAxB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,aAAT,QAA8B,0BAA9B;;AAEA,MAAMC,iBAAN,SAAgCL,SAAhC,CAA0C;AACxCM,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAjB;AACA,SAAKA,KAAL,CAAWL,aAAX;AACD;;AAEDM,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,eAGE,oBAAC,WAAD;AAAa,MAAA,QAAQ,EAAE,KAAKD,KAAL,CAAWE,QAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,CADF;AAQD;;AAfuC,C,CAkB1C;AACA;;;AACA,MAAMC,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAO;AACLF,IAAAA,QAAQ,EAAEE,KAAK,CAACF,QADX;AAELG,IAAAA,OAAO,EAAED,KAAK,CAACC;AAFV,GAAP;AAID,CALD,C,CAOA;;;AACA,MAAMC,kBAAkB,GAAGC,QAAQ,IAAI;AACrC,SAAO;AACLZ,IAAAA,aAAa,EAAE,MAAMY,QAAQ,CAACZ,aAAa,EAAd;AADxB,GAAP;AAGD,CAJD,C,CAMA;;;AACA,eAAeD,OAAO,CAACS,eAAD,EAAkBG,kBAAlB,CAAP,CAA6CV,iBAA7C,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport ProjectFilters from '../components/projects/ProjectFilters'\nimport ProjectList from '../components/projects/ProjectList'\nimport { connect } from 'react-redux';\nimport { fetchProjects } from \"../actions/fetchProjects\";\n\nclass ProjectsContainer extends Component {\n  componentDidMount() {\n    console.log(this.props)\n    this.props.fetchProjects()\n  }\n\n  render() {\n    return (\n      <div>\n        {/* {this.props.loading ? <h2>Loading...</h2> : ( */}\n        <ProjectFilters />\n        <ProjectList projects={this.props.projects} />\n        {/* )} */}\n      </div>\n    )\n  }\n}\n\n//passing in the state from the Redux store\n// so we can acccess values in our stores as props\nconst mapStateToProps = state => {\n  return {\n    projects: state.projects,\n    loading: state.loading\n  }\n}\n\n// gives us ability to dispatch new actions to our store directly from this component\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchProjects: () => dispatch(fetchProjects())\n  }\n}\n\n// connect redux store to this component\nexport default connect(mapStateToProps, mapDispatchToProps)(ProjectsContainer)"]},"metadata":{},"sourceType":"module"}