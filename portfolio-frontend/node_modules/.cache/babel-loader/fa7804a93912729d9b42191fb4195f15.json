{"ast":null,"code":"export const fetchBlogPosts = () => {\n  return dispatch => {\n    dispatch({\n      type: 'LOADING_BLOG'\n    }); // add CORs proxy to avoid no 'Access-Control-Allow-Origin' header error\n    // prefixing URL with proxy URL causes the request to get made through that proxy\n    // 1. Forwards request to url\n    // 2. Receives resp from url\n    // 3. Add Access-COntrol-Allow-Origin header to the resp\n    // 4. Pass that resp, with added header, back to requesting frontend code\n\n    const proxyurl = \"https://cors-anywhere.herokuapp.com/\";\n    const url = 'http://dev.to/api/articles?username=jacquelinelam';\n    fetch(proxyurl + url) // we won't do anything with this data until we get resp back\n    // take resp and turn into JS object notation\n    // .then() fn to parse JSON of response to this request\n    .then(resp => resp.json()) // execute asynchronous code, once resolved, we can use dispatch to update our store\n    // grab the actual collection of project objects\n    // call dispatch + send project JSON data to your store\n    // action dispatched along with a payload of the projects JSON collection\n    .then(respJSON => dispatch({\n      type: 'ADD_BLOG',\n      blog: respJSON\n    })).catch(() => alert(\"Can’t access response from dev.to API. Blocked by browser?\"));\n  };\n};","map":{"version":3,"sources":["/Users/jackie.lam/Projects/portfolio/portfolio-frontend/src/actions/fetchBlogPosts.js"],"names":["fetchBlogPosts","dispatch","type","proxyurl","url","fetch","then","resp","json","respJSON","blog","catch","alert"],"mappings":"AAAA,OAAO,MAAMA,cAAc,GAAG,MAAM;AAClC,SAAQC,QAAD,IAAc;AACnBA,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAAD,CAAR,CADmB,CAEnB;AACA;AACA;AACA;AACA;AACA;;AACA,UAAMC,QAAQ,GAAG,sCAAjB;AACA,UAAMC,GAAG,GAAG,mDAAZ;AACAC,IAAAA,KAAK,CAACF,QAAQ,GAAGC,GAAZ,CAAL,CACE;AACA;AACA;AAHF,KAIGE,IAJH,CAIQC,IAAI,IAAIA,IAAI,CAACC,IAAL,EAJhB,EAKE;AACA;AACA;AACA;AARF,KASGF,IATH,CASQG,QAAQ,IAAIR,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAE,UAAR;AAAoBQ,MAAAA,IAAI,EAAED;AAA1B,KAAD,CAT5B,EAUGE,KAVH,CAUS,MAAMC,KAAK,CAAC,4DAAD,CAVpB;AAWD,GArBD;AAsBD,CAvBM","sourcesContent":["export const fetchBlogPosts = () => {\n  return (dispatch) => {\n    dispatch({ type: 'LOADING_BLOG' });\n    // add CORs proxy to avoid no 'Access-Control-Allow-Origin' header error\n    // prefixing URL with proxy URL causes the request to get made through that proxy\n    // 1. Forwards request to url\n    // 2. Receives resp from url\n    // 3. Add Access-COntrol-Allow-Origin header to the resp\n    // 4. Pass that resp, with added header, back to requesting frontend code\n    const proxyurl = \"https://cors-anywhere.herokuapp.com/\";\n    const url = 'http://dev.to/api/articles?username=jacquelinelam'\n    fetch(proxyurl + url)\n      // we won't do anything with this data until we get resp back\n      // take resp and turn into JS object notation\n      // .then() fn to parse JSON of response to this request\n      .then(resp => resp.json())\n      // execute asynchronous code, once resolved, we can use dispatch to update our store\n      // grab the actual collection of project objects\n      // call dispatch + send project JSON data to your store\n      // action dispatched along with a payload of the projects JSON collection\n      .then(respJSON => dispatch({ type: 'ADD_BLOG', blog: respJSON }))\n      .catch(() => alert(\"Can’t access response from dev.to API. Blocked by browser?\"))\n  }\n}"]},"metadata":{},"sourceType":"module"}